{"version":3,"sources":["fetchMarketData.js","bootstrap.js","App.js","reportWebVitals.js","index.js"],"names":["marketData","name","price","date","period","type","bootstrap","QuantLib","Date","SwapRateHelper","Frequency","USDLibor","Compounding","TimeUnit","BusinessDayConvention","setValuationDate","Actual360","QuoteHandle","Period","DepositRateHelper","toPeriod","str","Number","substring","length","calendar","UnitedKingdom","UnitedKingdomMarket","Settlement","todaysDate","fromISOString","settlementDate","advance","Days","Following","depositDayCounter","depositsBusinessDayConvention","ModifiedFollowing","trashcan","depoFutSwapInstruments","filter","d","forEach","quote","push","swFixedLegFrequency","Annual","swFixedLegConvention","Unadjusted","swFixedLegDayCounter","swFloatingLegIndexPeriod","Months","swFloatingLegIndex","termStructureDayCounter","instrs","arr","res","j","set","toWasmVector","Vector$RateHelper$","depoFutSwapTermStructure","PiecewiseYieldCurve$Discount$Linear$","maxSerialNumber","benchmarks","map","qlDate","maturityDate","toISOString","Math","max","serialNumber","delete","rate","value","curvePoints","curveDate","interestRate","zeroRate","Compounded","oldDate","Plot","createPlotlyComponent","Plotly","Table","headers","columns","rows","className","i","e","CaptorLogomark","thickness","sin","acos","sqrt","r","width","height","f","x","df","c","xs","sw","scale","toFixed","join","x1","y1","x2","y2","s1","s2","viewBox","xmlns","fill","strokeWidth","strokeLinejoin","Footer","props","Fragment","href","rel","src","alt","style","maxWidth","cx","cy","App","useState","quantLibLoaded","setQuantLibLoaded","setQuantLib","useEffect","quantlibWasm","locateFile","path","endsWith","wasm","then","loaded","data","y","mode","Object","defineProperty","get","layout","yaxis","color","gridcolor","tickformat","zeroline","xaxis","hoverformat","paper_bgcolor","plot_bgcolor","margin","l","t","b","pad","colorway","showlegend","font","autosize","useResizeHandler","config","responsive","displayModeBar","showSendToCloud","toImageButtonOptions","format","displaylogo","modeBarButtonsToRemove","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38d5317d.chunk.js","sourcesContent":["export const marketData = [\n  {\n    name: \"STIBOR Fixing TN\",\n    price: -0.00208,\n    date: \"2019-08-26\",\n    period: \"1D\",\n    type: \"Deposit\",\n  },\n  {\n    name: \"STIBOR Fixing 1W\",\n    price: -0.00216,\n    date: \"2019-08-26\",\n    period: \"1W\",\n    type: \"Deposit\",\n  },\n  {\n    name: \"STIBOR Fixing 1M\",\n    price: -0.00135,\n    date: \"2019-08-26\",\n    period: \"1M\",\n    type: \"Deposit\",\n  },\n  {\n    name: \"STIBOR Fixing 2M\",\n    price: -0.00064,\n    date: \"2019-08-26\",\n    period: \"2M\",\n    type: \"Deposit\",\n  },\n  {\n    name: \"STIBOR Fixing 3M\",\n    price: -0.00004,\n    date: \"2019-08-26\",\n    period: \"3M\",\n    type: \"Deposit\",\n  },\n  {\n    name: \"STIBOR Fixing 6M\",\n    price: 0.00065,\n    date: \"2019-08-26\",\n    period: \"6M\",\n    type: \"Deposit\",\n  },\n  {\n    name: \"OMX SEK SWAP 1Y\",\n    price: -0.00115,\n    date: \"2019-08-26\",\n    period: \"1Y\",\n    type: \"Swap\",\n  },\n  {\n    name: \"OMX SEK SWAP 2Y\",\n    price: -0.00164,\n    date: \"2019-08-26\",\n    period: \"2Y\",\n    type: \"Swap\",\n  },\n  {\n    name: \"OMX SEK SWAP 3Y\",\n    price: -0.00166,\n    date: \"2019-08-26\",\n    period: \"3Y\",\n    type: \"Swap\",\n  },\n  {\n    name: \"OMX SEK SWAP 4Y\",\n    price: -0.00141,\n    date: \"2019-08-26\",\n    period: \"4Y\",\n    type: \"Swap\",\n  },\n  {\n    name: \"OMX SEK SWAP 5Y\",\n    price: -0.0009,\n    date: \"2019-08-26\",\n    period: \"5Y\",\n    type: \"Swap\",\n  },\n  {\n    name: \"OMX SEK SWAP 6Y\",\n    price: -0.00032,\n    date: \"2019-08-26\",\n    period: \"6Y\",\n    type: \"Swap\",\n  },\n  {\n    name: \"OMX SEK SWAP 7Y\",\n    price: 0.00032,\n    date: \"2019-08-26\",\n    period: \"7Y\",\n    type: \"Swap\",\n  },\n  {\n    name: \"OMX SEK SWAP 8Y\",\n    price: 0.00097,\n    date: \"2019-08-26\",\n    period: \"8Y\",\n    type: \"Swap\",\n  },\n  {\n    name: \"OMX SEK SWAP 9Y\",\n    price: 0.00161,\n    date: \"2019-08-26\",\n    period: \"9Y\",\n    type: \"Swap\",\n  },\n  {\n    name: \"OMX SEK SWAP 10Y\",\n    price: 0.00226,\n    date: \"2019-08-26\",\n    period: \"10Y\",\n    type: \"Swap\",\n  },\n];\n","const toWasmVector = (arr, type) => {\n  let res = new type(arr.length);\n  for (let j = 0; j < arr.length; j++) {\n    res.set(j, arr[j]);\n  }\n  return res;\n};\n\nfunction bootstrap(QuantLib, marketData) {\n  const {\n    Date,\n    /*Sweden,*/ SwapRateHelper,\n    Frequency,\n    USDLibor,\n    Compounding,\n  } = QuantLib;\n  const {\n    TimeUnit,\n    BusinessDayConvention,\n    setValuationDate,\n    Actual360,\n    QuoteHandle,\n    Period,\n    DepositRateHelper,\n  } = QuantLib;\n\n  const toPeriod = (str) =>\n    new Period(\n      Number(str.substring(0, str.length - 1)),\n      TimeUnit[str[str.length - 1]]\n    );\n  var calendar = new QuantLib.UnitedKingdom(\n    QuantLib.UnitedKingdomMarket.Settlement\n  );\n\n  var todaysDate = Date.fromISOString(marketData[0].date);\n  var fixingDays = 2;\n  var settlementDate = calendar.advance(\n    todaysDate,\n    fixingDays,\n    TimeUnit.Days,\n    BusinessDayConvention.Following,\n    false\n  );\n  setValuationDate(todaysDate);\n\n  var depositDayCounter = new Actual360();\n  var depositsBusinessDayConvention = BusinessDayConvention.ModifiedFollowing;\n\n  var trashcan = [calendar, settlementDate, todaysDate, depositDayCounter];\n\n  var depoFutSwapInstruments = [];\n\n  var deposits = marketData.filter((d) => d.type === \"Deposit\");\n  deposits.forEach((d) => {\n    var quote = new QuoteHandle(d.price);\n    var period = toPeriod(d.period);\n    depoFutSwapInstruments.push(\n      new DepositRateHelper(\n        quote,\n        period,\n        fixingDays,\n        calendar,\n        depositsBusinessDayConvention,\n        true,\n        depositDayCounter\n      )\n    );\n    trashcan.push(quote);\n    trashcan.push(period);\n  });\n\n  var swFixedLegFrequency = Frequency.Annual;\n  var swFixedLegConvention = BusinessDayConvention.Unadjusted;\n  var swFixedLegDayCounter = new Actual360();\n  var swFloatingLegIndexPeriod = new Period(3, TimeUnit.Months);\n  var swFloatingLegIndex = new USDLibor(swFloatingLegIndexPeriod);\n  trashcan.push(swFixedLegDayCounter);\n  trashcan.push(swFloatingLegIndexPeriod);\n  trashcan.push(swFloatingLegIndex);\n\n  var swaps = marketData.filter((d) => d.type === \"Swap\");\n  swaps.forEach((d) => {\n    var quote = new QuoteHandle(d.price);\n    var period = toPeriod(d.period);\n    depoFutSwapInstruments.push(\n      new SwapRateHelper(\n        quote,\n        period,\n        calendar,\n        swFixedLegFrequency,\n        swFixedLegConvention,\n        swFixedLegDayCounter,\n        swFloatingLegIndex\n      )\n    );\n    trashcan.push(quote);\n    trashcan.push(period);\n  });\n\n  var termStructureDayCounter = new Actual360();\n  trashcan.push(termStructureDayCounter);\n  var instrs = toWasmVector(\n    depoFutSwapInstruments,\n    QuantLib.Vector$RateHelper$\n  );\n  var depoFutSwapTermStructure = new QuantLib.PiecewiseYieldCurve$Discount$Linear$(\n    settlementDate,\n    instrs,\n    termStructureDayCounter\n  );\n\n  var maxSerialNumber = 0;\n  var benchmarks = depoFutSwapInstruments.map((d) => {\n    var qlDate = d.maturityDate();\n    var date = qlDate.toISOString();\n    maxSerialNumber = Math.max(maxSerialNumber, qlDate.serialNumber());\n    qlDate.delete();\n    var quote = d.quote();\n    var rate = quote.value();\n    quote.delete();\n    return { date, rate };\n  });\n\n  var curvePoints = [];\n  var curveDate = new Date(settlementDate.serialNumber());\n  while (curveDate.serialNumber() <= maxSerialNumber && maxSerialNumber > 0) {\n    // var curveDate = new Date(18, Month.February, 2020);\n    let interestRate = depoFutSwapTermStructure.zeroRate(\n      curveDate,\n      depositDayCounter,\n      Compounding.Compounded,\n      Frequency.Annual,\n      false\n    );\n    curvePoints.push({\n      date: curveDate.toISOString(),\n      rate: interestRate.rate(),\n    });\n    interestRate.delete();\n    let oldDate = curveDate;\n    curveDate = calendar.advance(\n      curveDate,\n      14,\n      TimeUnit.Days,\n      BusinessDayConvention.Unadjusted,\n      false\n    );\n    oldDate.delete();\n  }\n  trashcan.push(depoFutSwapTermStructure);\n  trashcan.push(instrs);\n\n  trashcan.forEach((d) => d.delete());\n  return { benchmarks, curvePoints };\n}\n\nexport default bootstrap;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport Plotly from \"plotly.js-basic-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\n\nimport quantlibWasm from \"quantlib-wasm\";\nimport { wasm } from \"./quantlib-wasm-wrapper\";\nimport { marketData } from \"./fetchMarketData\";\nimport bootstrap from \"./bootstrap\";\n\nconst Plot = createPlotlyComponent(Plotly);\n\nconst Table = ({ headers, columns, rows }) => (\n  <table className=\"table table-sm table-dark table-striped\">\n    <thead>\n      <tr>\n        {headers.map((d, i) => (\n          <th className=\"\" key={i}>\n            {d}\n          </th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>\n      {rows\n        ? rows.map((d, i) => (\n            <tr key={i}>\n              {columns.map((e, i) => (\n                <td key={i}>{d[e]}</td>\n              ))}\n            </tr>\n          ))\n        : null}\n    </tbody>\n  </table>\n);\n\nconst CaptorLogomark = ({ thickness }) => {\n  const { sin, acos, sqrt } = Math;\n  var sw = 1;\n  var r = thickness ? sw / Number(thickness) : 20;\n  var width = sw + 2 * r;\n  var height = width;\n\n  var f = (x) => sin(acos(x));\n  var scale = (d) => sw / 2 + r + d * r;\n  var df = (c, xs) =>\n    c +\n    xs.map((d, i) => (c === \"A\" && i <= 4 ? d : scale(d).toFixed(2))).join(\",\");\n\n  var x1 = -0.666666;\n  var y1 = f(x1);\n  var x2 = x1 + sqrt(3) * y1;\n  var y2 = f(x2);\n\n  var s1 =\n    df(\"M\", [x1, -y1]) +\n    df(\"L\", [x1, y1]) +\n    df(\"L\", [x2, 0]) +\n    df(\"L\", [x1, -y1]);\n  var s2 =\n    df(\"M\", [x2, 0]) +\n    df(\"L\", [x2, y2]) +\n    df(\"A\", [r, r, 0, 1, 1, x2, -y2]) +\n    df(\"L\", [x2, 0]);\n\n  return (\n    <svg\n      viewBox={`0 0 ${width} ${height}`}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"captor-logomark\"\n    >\n      <path fill=\"none\" strokeWidth={sw} strokeLinejoin=\"bevel\" d={s1} />\n      <path fill=\"none\" strokeWidth={sw} d={s2} />\n    </svg>\n  );\n};\n\nconst Footer = (props) => (\n  <React.Fragment>\n    <a href=\"https://nodei.co/npm/quantlib-wasm\" rel=\"nofollow\">\n      <img\n        src=\"https://camo.githubusercontent.com/19eaafc39d5790116e1728fb7219d748537661bc/68747470733a2f2f6e6f6465692e636f2f6e706d2f7175616e746c69622d7761736d2e706e673f646f776e6c6f6164733d7472756526646f776e6c6f616452616e6b3d74727565\"\n        alt=\"NPM\"\n        style={{ maxWidth: \"100%\" }}\n      />\n    </a>\n    <a href=\"https://captor.se/\">\n      <CaptorLogomark thickness={1 / 15} />\n    </a>\n    <a href=\"https://reactjs.org/\">\n      <svg\n        className=\"react-logomark\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 841.9 595.3\"\n      >\n        <g fill=\"#61DAFB\">\n          <path\n            d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-4\n9.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n          />\n          <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\" />\n          <path d=\"M520.5 78.1z\" />\n        </g>\n      </svg>\n    </a>\n  </React.Fragment>\n);\n\nfunction App() {\n  const [quantLibLoaded, setQuantLibLoaded] = useState(false);\n  const [QuantLib, setQuantLib] = useState(null);\n\n  useEffect(() => {\n    if (!quantLibLoaded) {\n      quantlibWasm({\n        locateFile: (path) => (path.endsWith(\".wasm\") ? wasm : path),\n      }).then((loaded) => {\n        setQuantLib(loaded);\n        setQuantLibLoaded(true);\n      });\n    }\n  });\n\n  const headers = [\"Instrument\", \"Type\", \"Price\"];\n  const columns = [\"name\", \"type\", \"quote\"];\n\n  if (!QuantLib) {\n    return <div></div>;\n  }\n\n  const { benchmarks, curvePoints } = bootstrap(QuantLib, marketData);\n  let trace1 = {\n    x: benchmarks.map((d) => new Date(d.date)),\n    y: benchmarks.map((d) => d.rate),\n    mode: \"markers\",\n    type: \"scatter\",\n  };\n  let trace2 = {\n    x: curvePoints.map((d) => new Date(d.date)),\n    y: curvePoints.map((d) => d.rate),\n    mode: \"lines\",\n    type: \"scatter\",\n  };\n  let data = [trace1, trace2];\n  let layout = {\n    yaxis: {\n      color: \"#ffb15e\",\n      gridcolor: \"#454d55\",\n      tickformat: \".2%f\",\n      zeroline: false,\n    },\n    xaxis: {\n      color: \"#ffb15e\",\n      gridcolor: \"#454d55\",\n      hoverformat: \"%Y-%m-%d\",\n    },\n    paper_bgcolor: \"#222\",\n    plot_bgcolor: \"#343434\",\n    margin: { l: 42, r: 10, t: 2, b: 20, pad: 0 },\n    colorway: [\"#ffb15e\", \"#1f77b4\"],\n    showlegend: false,\n    font: \"Inconsolata\",\n    autosize: true,\n  };\n\n  if (marketData) {\n    marketData.forEach((d) => {\n      if (!(\"quote\" in d)) {\n        Object.defineProperty(d, \"quote\", {\n          get: () => `${(100 * d.price).toFixed(4)}%`,\n        });\n      }\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h2>Swedish Kronor interest rate swap yield curve</h2>\n          <h4>Market date: 2019-08-26</h4>\n          <p className=\"text\">\n            This app uses QuantLib WebAssembly, which is a JavaScript\n            compilation of the quantitative finance library QuantLib (codebase\n            in C++). The app fetches latest market prices and bootstraps the\n            interest yield curve in pure JavaScript. No server-side calculations\n            or rendering is needed. The app only loads static content.\n          </p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 col-md-6\">\n          <Table headers={headers} columns={columns} rows={marketData} />\n        </div>\n        <div className=\"col-12 col-md-6\">\n          <Plot\n            data={data}\n            layout={layout}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n            config={{\n              responsive: true,\n              displayModeBar: true,\n              showSendToCloud: false,\n              toImageButtonOptions: { format: \"svg\" },\n              displaylogo: false,\n              modeBarButtonsToRemove: [\n                \"zoom2d\",\n                \"pan2d\",\n                \"select2d\",\n                \"resetViews\",\n                \"toggleSpikelines\",\n                \"hoverClosestCartesian\",\n                \"hoverCompareCartesian\",\n                \"lasso2d\",\n                \"zoomIn2d\",\n                \"zoomOut2d\",\n                \"autoScale2d\",\n                \"resetScale2d\",\n                \"hoverClosestPie\",\n                \"sendDataToCloud\",\n              ],\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}